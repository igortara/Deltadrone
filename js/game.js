// === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã ===
const mymap = L.map('mapid').setView([49, 32], 6); // –¶–µ–Ω—Ç—Ä –£–∫—Ä–∞–∏–Ω—ã
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 18,
    attribution: '&copy; OpenStreetMap contributors'
}).addTo(mymap);

function initmap() {
   var maptilerSatelliteUrl = 'https://api.maptiler.com/maps/satellite-v2/{z}/{x}/{y}.jpg?key=KblwSJyQeoJq77gnaqQx';
   L.tileLayer(maptilerSatelliteUrl, {
                attribution: '<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',
                maxZoom: 19 
    }).addTo(mymap);
}
// === –¢–æ—á–∫–∞ —Å—Ç–∞—Ä—Ç–∞ ‚Äî –ö—É—Ä—Å–∫ ===
const kursk = [51.7306, 36.1939];
const orel = [52.8915, 35.8594];

// === –ó–∞–ø–∞—Å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã –£–∫—Ä–∞–∏–Ω—ã (—É–ø—Ä–æ—â–µ–Ω–Ω–æ) ===
const ukraineBounds = {
    minLat: 44.38,
    maxLat: 52.38,
    minLng: 22.14,
    maxLng: 40.23
};

// === –°–ª—É—á–∞–π–Ω–∞—è —Ç–æ—á–∫–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –∑–∞–ø–∞—Å–Ω—ã—Ö –≥—Ä–∞–Ω–∏—Ü –£–∫—Ä–∞–∏–Ω—ã ===
function getRandomUkrainePoint() {
    const lat = ukraineBounds.minLat + Math.random() * (ukraineBounds.maxLat - ukraineBounds.minLat);
    const lng = ukraineBounds.minLng + Math.random() * (ukraineBounds.maxLng - ukraineBounds.minLng);
    return [lat, lng];
}

// === –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ë–ü–õ–ê ===
function flyDrone(from, to) {
    const droneIcon = L.divIcon({
        className: "drone-icon",
        html: `<img src="images/geran.png" width="32" height="32" />`,
        iconSize: [32, 32],
        iconAnchor: [16, 16]
    });

    const marker = L.marker(from, { icon: droneIcon }).addTo(mymap);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ü–µ–ª—å –Ω–∞ –∫–∞—Ä—Ç–µ
    const targetMarker = L.marker(to).addTo(mymap).bindPopup("üéØ –¶—ñ–ª—å").openPopup();

    const speed = 0.0010; // —à–∞–≥ –¥–≤–∏–∂–µ–Ω–∏—è

    function move() {
        const lat = marker.getLatLng().lat;
        const lng = marker.getLatLng().lng;

        const dLat = to[0] - lat;
        const dLng = to[1] - lng;
        const dist = Math.sqrt(dLat * dLat + dLng * dLng);

        if (dist < 0.01) {
            marker.setLatLng(to);
            marker.bindPopup("üí• –í–∏–±—É—Ö!").openPopup();
            
            // –£–¥–∞–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –¥—Ä–æ–Ω–∞ –∏ –º–∞—Ä–∫–µ—Ä —Ü–µ–ª–∏ –ø–æ—Å–ª–µ –≤–∑—Ä—ã–≤–∞
            setTimeout(() => {
                mymap.removeLayer(marker);
                mymap.removeLayer(targetMarker); // –£–¥–∞–ª—è–µ–º –º–∞—Ä–∫–µ—Ä —Ü–µ–ª–∏
            }, 1500);
            return;
        }

        const normLat = dLat / dist;
        const normLng = dLng / dist;

        marker.setLatLng([lat + normLat * speed, lng + normLng * speed]);

        // –ü–æ–≤–æ—Ä–æ—Ç –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é
        const angleRad = Math.atan2(dLng, dLat);
        const angleDeg = angleRad * (180 / Math.PI);
        const img = marker.getElement()?.querySelector('img');
        if (img) img.style.transform = `rotate(${angleDeg}deg)`;

        requestAnimationFrame(move);
    }

    move();
}

// === –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–ø–∞–≤–Ω–∞ –®–∞—Ö–µ–¥–∞ ===
function spawnShahed() {
    const target = getRandomUkrainePoint();
    let posi; // –û–≥–æ–ª–æ—à—É—î–º–æ posi —è–∫ let, –±–æ —ó—ó –∑–Ω–∞—á–µ–Ω–Ω—è –±—É–¥–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏—Å—è

    // –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ 0 –∞–±–æ 1
    // Math.random() –ø–æ–≤–µ—Ä—Ç–∞—î —á–∏—Å–ª–æ –≤—ñ–¥ 0 (–≤–∫–ª—é—á–Ω–æ) –¥–æ 1 (–Ω–µ –≤–∫–ª—é—á–Ω–æ)
    // Math.floor(Math.random() * 2) –¥–∞—Å—Ç—å 0 –∞–±–æ 1
    let rand = Math.floor(Math.random() * 2);

    if (rand === 0) { // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ === –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
        posi = kursk;
        console.log(`–ó–∞–ø—É—â–µ–Ω –®–∞—Ö–µ–¥ –∏–∑ –ö—É—Ä—Å–∫–∞ –≤ [${target[0].toFixed(4)}, ${target[1].toFixed(4)}]`);
    } else { // –Ø–∫—â–æ rand –Ω–µ 0, —Ç–æ —Ü–µ 1
        posi = orel;
        console.log(`–ó–∞–ø—É—â–µ–Ω –®–∞—Ö–µ–¥ –∏–∑ –û—Ä–ª–∞ –≤ [${target[0].toFixed(4)}, ${target[1].toFixed(4)}]`);
    }
    
    flyDrone(posi, target);
}
// === –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –®–∞—Ö–µ–¥–∞ —Å—Ä–∞–∑—É –∏ –¥–∞–ª–µ–µ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ ===
initmap(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
spawnShahed();
setInterval(spawnShahed, 10000); // –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–æ–≤—ã–π –¥—Ä–æ–Ω –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ (10000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥)